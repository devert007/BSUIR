
#include <iostream>
using namespace std;
#include "windows.h"
#include <string>
struct Node {
	int data;
	Node* next;
};
Node* createNode(int data) {
	Node* newNode = new Node();
	newNode->next = nullptr;
	newNode->data=data;
	return newNode;
}
void push(Node*& top, int data) {
	Node* new_n = createNode(data);
	
	new_n->next = top;
	top = new_n;
	
}
int pop(Node*& top) {
	Node* temp = top;
	top = (top)->next;
	int data = temp->data;
	delete temp;

	return data;
}
void printStk(Node* top) {
	Node* current = top;
	while (current != nullptr) {
		
		cout << current->data;
		current = current->next;
		cout << '\n';
	}
	cout << '\n';
}
int sizeStk(Node* top) {
	Node* current = top;
	int size=0;
	while (current != nullptr) {
		size++;
		
		current = current->next;
	}
	return size;
}
void addNewNode(Node* &top, int size) {
	Node* current = top;
	int i = 1;
	while (current != nullptr) {
		i++;
		
		if (i%3==0) {
			Node* new_node = createNode(235);
			new_node->next = current->next;
			current->next = new_node;
		}
		current = current->next;

	}
}
int main() {
	
	Node* stack=nullptr;
	push(stack, -5);
	push(stack, -3);
	push(stack, 2);
	push(stack, 1);
	push(stack, 0);
	push(stack, -1);
	push(stack, -2);

	printStk(stack);



	int size = sizeStk(stack);
	addNewNode(stack, size);
	printStk(stack);
	return 0;
}
